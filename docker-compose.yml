services:
  ros2:
    build:
      context: docker/ros2
      args:
        - user_id=1001
        - ros_ws=/home/dockeruser/dev_ws

    # Enabling GPU access with Compose
    # https://docs.docker.com/compose/gpu-support/
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #          - capabilities: [gpu]
    #            count: all
    network_mode: host
    privileged: true
    container_name: gazebo_turtlebot_cont
    environment:
      # Set a fancy prompt (See ~/.bashrc in the container)
      - TERM=xterm-256color

      # WSLg settings
      # https://www.reddit.com/r/bashonubuntuonwindows/comments/n2nthu/can_i_use_the_new_wslg_with_docker/
      - DISPLAY
      - WAYLAND_DISPLAY
      - XDG_RUNTIME_DIR
      - PULSE_SERVER
      # Match the ROS domain ID of the TurtleBot (default is 0)
      - "ROS_DOMAIN_ID=30"
      # Explicitly set the middleware to Cyclone DDS, which is used by TurtleBot4
      - "RMW_IMPLEMENTATION=rmw_cyclonedds_cpp"
      #- "ROS_LOCALHOST_ONLY=0"
      #- CYCLONEDDS_URI=file:///home/dockeruserjazzy/cyclonedds_config.xml
    # Mount local directories into the container for easy development
      #- ROS_STATIC_PEERS="10.42.0.1"
      # - ROS_STATIC_PEERS="10.42.0.1"
      # - ROS_AUTOMATIC_DISCOVERY_RANGE=OFF

    volumes:
      - ./:/home/dockeruser/project
      - ./dev_ws:/home/dockeruser/dev_ws
      - ./docker/ros2/.ros:/home/dockeruser/.ros
      - ./docker/ros2/.gazebo/:/home/dockeruser/.gazebo

      # WSLg settings
      - /mnt/wslg:/mnt/wslg
      - /tmp/.X11-unix:/tmp/.X11-unix
